basePath: /notifications/api
definitions:
  CoreUserRef:
    properties:
      name:
        type: string
      user_id:
        type: string
    type: object
  FirebaseToken:
    properties:
      app_platform:
        type: string
      app_version:
        type: string
      date_created:
        type: string
      date_updated:
        type: string
      token:
        type: string
    type: object
  Recipient:
    properties:
      name:
        type: string
      notification_disabled:
        type: boolean
      user_id:
        type: string
    type: object
  TokenInfo:
    properties:
      app_platform:
        type: string
      app_version:
        type: string
      previous_token:
        type: string
      token:
        type: string
    type: object
  Topic:
    properties:
      app_id:
        type: string
      date_created:
        type: string
      date_updated:
        type: string
      description:
        type: string
      name:
        type: string
      org_id:
        type: string
    type: object
  User:
    properties:
      date_created:
        type: string
      date_updated:
        type: string
      firebase_tokens:
        items:
          $ref: '#/definitions/FirebaseToken'
        type: array
      id:
        type: string
      notifications_disabled:
        type: boolean
      topics:
        items:
          type: string
        type: array
      user_id:
        type: string
    type: object
  getMessagesRequestBody:
    properties:
      ids:
        items:
          type: string
        type: array
    type: object
  model.Message:
    properties:
      body:
        type: string
      data:
        additionalProperties:
          type: string
        type: object
      date_created:
        type: string
      date_updated:
        type: string
      id:
        type: string
      priority:
        type: integer
      recipients:
        items:
          $ref: '#/definitions/Recipient'
        type: array
      recipients_criteria_list:
        items:
          $ref: '#/definitions/model.RecipientCriteria'
        type: array
      sender:
        $ref: '#/definitions/model.Sender'
        type: object
      subject:
        type: string
      topic:
        type: string
    type: object
  model.RecipientCriteria:
    properties:
      app_platform:
        type: string
      app_version:
        type: string
    type: object
  model.Sender:
    properties:
      type:
        description: user or system
        type: string
      user:
        $ref: '#/definitions/CoreUserRef'
        type: object
    type: object
  sendMailRequestBody:
    properties:
      body:
        type: string
      subject:
        type: string
      to_mail:
        type: string
    type: object
  sendMessageRequestBody:
    properties:
      async:
        type: boolean
      message:
        $ref: '#/definitions/model.Message'
        type: object
    type: object
  tokenBody:
    properties:
      token:
        type: string
    type: object
  updateUserRequest:
    properties:
      notifications_disabled:
        type: boolean
    type: object
host: localhost
info:
  contact: {}
  description: Rokwire Notifications Building Block API Documentation.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Rokwire Notifications Building Block API
  version: 1.1.8
paths:
  /admin/app_platforms:
    get:
      description: Gets all available app platforms
      operationId: GetAllAppPlatforms
      produces:
      - text/plain
      responses:
        "200": {}
      security:
      - AdminUserAuth: []
      tags:
      - Admin
  /admin/app_versions:
    get:
      description: Gets all available app versions
      operationId: GetAllAppVersions
      produces:
      - text/plain
      responses:
        "200": {}
      security:
      - AdminUserAuth: []
      tags:
      - Admin
  /admin/message:
    post:
      consumes:
      - application/json
      description: Creates a message
      operationId: CreateMessage
      parameters:
      - description: body json
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.Message'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Message'
      security:
      - AdminUserAuth: []
      tags:
      - Admin
    put:
      consumes:
      - application/json
      description: Updates a message
      operationId: UpdateMessage
      parameters:
      - description: body json
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.Message'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Message'
      security:
      - AdminUserAuth: []
      tags:
      - Admin
  /admin/message/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a message with id
      operationId: DeleteMessage
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200": {}
      security:
      - AdminUserAuth: []
      tags:
      - Admin
    get:
      consumes:
      - application/json
      description: Retrieves a message by id
      operationId: GetMessage
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Message'
      security:
      - AdminUserAuth: []
      tags:
      - Admin
  /admin/messages:
    get:
      description: Gets all messages
      operationId: GetMessages
      parameters:
      - description: user - filter by user
        in: query
        name: user
        type: string
      - description: topic - filter by topic
        in: query
        name: topic
        type: string
      - description: offset
        in: query
        name: offset
        type: string
      - description: limit - limit the result
        in: query
        name: limit
        type: string
      - description: 'order - Possible values: asc, desc. Default: desc'
        in: query
        name: order
        type: string
      - description: start_date - Start date filter in milliseconds as an integer
          epoch value
        in: query
        name: start_date
        type: string
      - description: end_date - End date filter in milliseconds as an integer epoch
          value
        in: query
        name: end_date
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Message'
            type: array
      security:
      - AdminUserAuth: []
      tags:
      - Admin
  /admin/topic:
    put:
      description: Updated the topic.
      operationId: UpdateTopic
      parameters:
      - description: body json
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/Topic'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Topic'
      security:
      - AdminUserAuth: []
      tags:
      - Admin
  /admin/topics:
    get:
      description: Gets all topics
      operationId: AdminGetTopics
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Topic'
            type: array
      security:
      - AdminUserAuth: []
      tags:
      - Admin
  /int/mail:
    post:
      description: Sends an email
      operationId: InternalSendMail
      parameters:
      - description: body json
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/sendMailRequestBody'
      produces:
      - text/plain
      responses:
        "200": {}
      security:
      - InternalAuth: []
      tags:
      - Internal
  /int/message:
    post:
      deprecated: true
      description: Sends a message to a user, list of users or a topic
      operationId: InternalSendMessage
      parameters:
      - description: body json
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.Message'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Message'
      security:
      - InternalAuth: []
      tags:
      - Internal
  /int/v2/message:
    post:
      description: Sends a message to a user, list of users or a topic
      operationId: InternalSendMessageV2
      parameters:
      - description: body json
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/sendMessageRequestBody'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Message'
      security:
      - InternalAuth: []
      tags:
      - Internal
  /message:
    post:
      consumes:
      - application/json
      description: Creates a message. Message without subject and body will be interpreted
        as a data massage and it won't be stored in the database
      operationId: createMessage
      parameters:
      - description: body json
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.Message'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Message'
      security:
      - UserAuth: []
      tags:
      - Client
  /message/{id}:
    delete:
      description: Removes the current user from the recipient list of the message
      operationId: DeleteUserMessage
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200": {}
      security:
      - UserAuth: []
      tags:
      - Client
    get:
      consumes:
      - application/json
      description: Retrieves a message by id
      operationId: GetUserMessage
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Message'
      security:
      - UserAuth: []
      tags:
      - Client
  /messages:
    delete:
      consumes:
      - application/json
      description: Removes the current user from the recipient list of all described
        messages
      operationId: DeleteUserMessages
      parameters:
      - description: body json of the all message ids that need to be filtered
        in: body
        name: data
        schema:
          $ref: '#/definitions/getMessagesRequestBody'
      responses:
        "200": {}
      security:
      - UserAuth: []
      tags:
      - Client
    get:
      consumes:
      - application/json
      description: Gets all messages to the authenticated user.
      operationId: GetUserMessages
      parameters:
      - description: offset
        in: query
        name: offset
        type: string
      - description: limit - limit the result
        in: query
        name: limit
        type: string
      - description: 'order - Possible values: asc, desc. Default: desc'
        in: query
        name: order
        type: string
      - description: start_date - Start date filter in milliseconds as an integer
          epoch value
        in: query
        name: start_date
        type: string
      - description: end_date - End date filter in milliseconds as an integer epoch
          value
        in: query
        name: end_date
        type: string
      - description: body json of the all message ids that need to be filtered
        in: body
        name: data
        schema:
          $ref: '#/definitions/getMessagesRequestBody'
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Message'
            type: array
      security:
      - UserAuth: []
      tags:
      - Client
  /token:
    post:
      consumes:
      - application/json
      description: Stores a firebase token and maps it to a idToken if presents
      operationId: Token
      parameters:
      - description: body json
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/TokenInfo'
      responses:
        "200": {}
      security:
      - RokwireAuth UserAuth: []
      tags:
      - Client
  /topic/{topic}/messages:
    get:
      description: Gets all messages for topic
      operationId: GetTopicMessages
      parameters:
      - description: topic
        in: path
        name: topic
        required: true
        type: string
      - description: offset
        in: query
        name: offset
        type: string
      - description: limit - limit the result
        in: query
        name: limit
        type: string
      - description: 'order - Possible values: asc, desc. Default: desc'
        in: query
        name: order
        type: string
      - description: start_date - Start date filter in milliseconds as an integer
          epoch value
        in: query
        name: start_date
        type: string
      - description: end_date - End date filter in milliseconds as an integer epoch
          value
        in: query
        name: end_date
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Message'
            type: array
      security:
      - RokwireAuth UserAuth: []
      tags:
      - Client
  /topic/{topic}/subscribe:
    post:
      consumes:
      - application/json
      description: Subscribes the current user to a topic
      operationId: Subscribe
      parameters:
      - description: topic
        in: path
        name: topic
        required: true
        type: string
      - description: body json
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/tokenBody'
      responses:
        "200": {}
      security:
      - RokwireAuth UserAuth: []
      tags:
      - Client
  /topic/{topic}/unsubscribe:
    post:
      description: Unsubscribes the current user to a topic
      operationId: Unsubscribe
      parameters:
      - description: topic
        in: path
        name: topic
        required: true
        type: string
      - description: body json
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/tokenBody'
      responses:
        "200": {}
      security:
      - RokwireAuth UserAuth: []
      tags:
      - Client
  /topics:
    get:
      description: Gets all topics
      operationId: GetTopics
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Topic'
            type: array
      security:
      - RokwireAuth: []
      tags:
      - Client
  /user:
    delete:
      description: Deletes user record and unlink all messages
      operationId: DeleteUser
      parameters:
      - description: body json
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/updateUserRequest'
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/User'
            type: array
      security:
      - RokwireAuth UserAuth: []
      tags:
      - Client
    get:
      description: Gets user record
      operationId: User
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/User'
            type: array
      security:
      - RokwireAuth UserAuth: []
      tags:
      - Client
    post:
      description: Updates user record
      operationId: User
      parameters:
      - description: body json
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/updateUserRequest'
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/User'
            type: array
      security:
      - RokwireAuth UserAuth: []
      tags:
      - Client
  /version:
    get:
      description: Gives the service version.
      operationId: Version
      produces:
      - text/plain
      responses:
        "200": {}
      security:
      - RokwireAuth: []
      tags:
      - Client
schemes:
- https
securityDefinitions:
  AdminUserAuth:
    in: header (add admin core access token with Bearer prefix to the Authorization
      value. The token must contain notifications_admin as a permission)
    name: Authorization
    type: apiKey
  InternalAuth:
    in: header
    name: INTERNAL-API-KEY
    type: apiKey
  RokwireAuth:
    in: header
    name: ROKWIRE-API-KEY
    type: apiKey
  UserAuth:
    in: header (add core access token with Bearer prefix to the Authorization value.
      The token must represent either anonymous or authenticated user )
    name: Authorization
    type: apiKey
swagger: "2.0"
