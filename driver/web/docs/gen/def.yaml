openapi: 3.0.3
info:
  title: Rokwire Notification Building Block API
  description: Notification Building Block API Documentation
  version: 1.14.0
servers:
  - url: 'https://api.rokwire.illinois.edu/notifications'
    description: Production server
  - url: 'https://api-test.rokwire.illinois.edu/notifications'
    description: Test server
  - url: 'https://api-dev.rokwire.illinois.edu/notifications'
    description: Development server
  - url: 'http://localhost/notifications'
    description: Local server
tags:
  - name: Admin
    description: Clients administration applications APIs.
  - name: Internal
    description: Internal applications APIs.
  - name: Client
    description: Client applications APIs.
paths:
  /api/int/message:
    post:
      tags:
        - Internal
      deprecated: true
      summary: Create message
      description: |
        Create message
      security:
        - bearerAuth: []
      requestBody:
        description: message body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_shared_req_CreateMessage'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  /api/int/v2/message:
    post:
      tags:
        - Internal
      summary: Create message
      deprecated: true
      description: |
        Create message
      security:
        - bearerAuth: []
      requestBody:
        description: message body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_client_req_messageV2'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  /api/int/mail:
    post:
      tags:
        - Internal
      deprecated: true
      summary: Stores a firebase token and maps it to a idToken if presents"
      description: |
        Stores a firebase token and maps it to a idToken if presents"
      security:
        - bearerAuth: []
      requestBody:
        description: sending mail
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_client_req_token'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  /api/token:
    post:
      tags:
        - Client
      summary: Store Firebase token
      description: |
        Store Firebase token
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_client_req_token'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  /api/user:
    get:
      tags:
        - Client
      summary: Gets user record
      description: |
        Gets user record
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
    delete:
      tags:
        - Client
      summary: Deletes user record and unlink all messages
      description: |
        Deletes user record and unlink all messages
      security:
        - bearerAuth: []
      requestBody:
        description: notifications_disabled
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_client_req_user'
              type: array
        required: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
                example: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
    put:
      tags:
        - Client
      summary: Updates user record
      description: |
        Updates user record
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_client_req_user'
              type: array
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  /api/message:
    post:
      tags:
        - Client
      summary: Create message
      description: |
        Create message

        **Auth:** Requires user token with `send_message` permission
      security:
        - bearerAuth: []
      requestBody:
        description: message body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_shared_req_CreateMessage'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  /api/messages:
    get:
      tags:
        - Client
      summary: Retrieves a message by id
      description: |
        Retrieves a message by id
      security:
        - bearerAuth: []
      requestBody:
        description: body json of the all message ids that need to be filtered
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_client_req_message'
        required: true
      parameters:
        - name: read
          in: query
          description: read
          style: simple
          explode: false
          schema:
            type: boolean
        - name: mute
          in: query
          description: mute
          style: simple
          explode: false
          schema:
            type: boolean
        - name: offset
          in: query
          description: offset
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: limit
          in: query
          description: limit
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: order
          in: query
          description: 'order - Possible values: asc, desc. Default: desc'
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: start_date
          in: query
          description: start_date - Start date filter in milliseconds as an integer epoch value
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: end_date
          in: query
          description: end_date - End date filter in milliseconds as an integer epoch value
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
    delete:
      tags:
        - Client
      summary: Removes the current user from the recipient list of all described
      description: |
        Removes the current user from the recipient list of all described
      security:
        - bearerAuth: []
      requestBody:
        description: body json of the all message ids that need to be filtered
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_client_req_message'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  /api/messages/read:
    put:
      tags:
        - Client
      summary: Update read status of all messages where the current user is defined as a recipient
      description: |
        Update read status of all messages where the current user is defined as a recipient
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  /api/messages/stats:
    get:
      tags:
        - Client
      summary: Count the unread messages
      description: |
        Count the unread messages
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  '/api/message/{id}':
    get:
      tags:
        - Client
      summary: Retrieves a message by id
      description: |
        Retrieves a message by id
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: offset
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
    delete:
      tags:
        - Client
      summary: Removes the current user from the recipient list of the message
      description: |
        Removes the current user from the recipient list of the message
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  '/api/message/{id}/read':
    put:
      tags:
        - Client
      summary: Update message
      description: |
        Update message
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: offset
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  /api/topics:
    get:
      tags:
        - Client
      summary: Gets all topics
      description: |
        Gets all topics
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Topic'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  '/api/topic/{topic}/messages':
    get:
      tags:
        - Client
      summary: Gets all messages for topic
      description: |
        Gets all messages for topic
      security:
        - bearerAuth: []
      parameters:
        - name: topic
          in: path
          description: topic
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: offset
          in: query
          description: offset
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: limit
          in: query
          description: limit - limit the result
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: order
          in: query
          description: 'order - Possible values: asc, desc. Default: desc'
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: start_date
          in: query
          description: start_date - Start date filter in milliseconds as an integer epoch value
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: end_date
          in: query
          description: end_date - End date filter in milliseconds as an integer epoch value
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  '/api/topic/{topic}/subscribe':
    post:
      tags:
        - Client
      summary: Subscribes the current user to a topic
      description: |
        Subscribes the current user to a topic
      security:
        - bearerAuth: []
      requestBody:
        description: token
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_client_req_token'
        required: true
      parameters:
        - name: topic
          in: path
          description: topic
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  '/api/topic/{topic}/unsubscribe':
    post:
      tags:
        - Client
      summary: Unubscribes the current user to a topic
      description: |
        Unsubscribes the current user to a topic
      security:
        - bearerAuth: []
      requestBody:
        description: token
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_client_req_token'
        required: true
      parameters:
        - name: topic
          in: path
          description: topic
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  /api/admin/app-versions:
    get:
      tags:
        - Admin
      summary: Gets all available app versions
      description: |
        Gets all available app versions
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
                example: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  /api/admin/app-platforms:
    get:
      tags:
        - Admin
      summary: Gets all available app platforms
      description: |
        Gets all available app platforms
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
                example: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  /api/admin/topics:
    get:
      tags:
        - Admin
      summary: Gets all topics
      description: |
        Gets all topics
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Topic'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  /api/admin/topic:
    put:
      tags:
        - Admin
      summary: Updated the topic
      description: |
        Updated the topic
      security:
        - bearerAuth: []
      requestBody:
        description: token
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Topic'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Topic'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  /api/admin/messages:
    get:
      tags:
        - Admin
      summary: Retrieves a message by id
      description: |
        Retrieves a message by id
      security:
        - bearerAuth: []
      requestBody:
        description: body json of the all message ids that need to be filtered
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_client_req_message'
        required: true
      parameters:
        - name: offset
          in: query
          description: offset
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: limit
          in: query
          description: limit
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: order
          in: query
          description: 'order - Possible values: asc, desc. Default: desc'
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: start_date
          in: query
          description: start_date - Start date filter in milliseconds as an integer epoch value
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: end_date
          in: query
          description: end_date - End date filter in milliseconds as an integer epoch value
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  /api/admin/message:
    post:
      tags:
        - Admin
      summary: Create message
      description: |
        Create message
      security:
        - bearerAuth: []
      requestBody:
        description: message body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_shared_req_CreateMessage'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
    put:
      tags:
        - Admin
      summary: Update message
      description: |
        Update message
      security:
        - bearerAuth: []
      requestBody:
        description: message body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_shared_req_CreateMessage'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  '/api/admin/messages{id}':
    get:
      tags:
        - Admin
      summary: Gets message by id
      description: |
        Gets message by id
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: the message id
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
    delete:
      tags:
        - Admin
      summary: Delete message
      description: |
        Deletes an existing message
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: The message
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
                example: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  '/api/admin/messages/stats/source/{source}':
    get:
      tags:
        - Admin
      summary: Gets messages stats
      description: |
        Gets messages stats

        **Auth:** Requires admin access token with `get_messages_stats` permission for "me" source and `get_messages_stats_all` for "all" source
      security:
        - bearerAuth: []
      parameters:
        - name: source
          in: path
          description: source - all or me
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: offset
          in: query
          description: offset
          required: false
          style: simple
          explode: false
          schema:
            type: string
        - name: limit
          in: query
          description: limit
          required: false
          style: simple
          explode: false
          schema:
            type: string
        - name: order
          in: query
          description: 'order - Possible values: asc, desc. Default: asc'
          required: false
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/_admin_res_GetMessagesStatsItem'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  /api/bbs/messages:
    post:
      tags:
        - BBs
      summary: Create messages
      description: |
        Create messages

        **Auth:** Requires first-party service token with `send_message` permission
      security:
        - bearerAuth: []
      requestBody:
        description: message body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_shared_req_CreateMessages'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
    delete:
      tags:
        - BBs
      summary: Remove messages
      description: |
        Remove messages

        **Auth:** Requires first-party service token with `cancel_message` permission
      security:
        - bearerAuth: []
      parameters:
        - name: ids
          in: query
          description: ids of the messages for deletion separated with comma
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  '/api/bbs/messages/{message-id}/recipients':
    post:
      tags:
        - BBs
      summary: Adds recipients to a message
      description: |
        Adds recipients to a message
      security:
        - bearerAuth: []
      requestBody:
        description: message body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_bbs_req_AddRecipients'
      parameters:
        - name: message-id
          in: path
          description: id of the message for recipients creation separated with comma
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MessageRecipient'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
    delete:
      tags:
        - BBs
      summary: Delete recipients from a message
      description: |
        Delete recipients from a message
      security:
        - bearerAuth: []
      requestBody:
        description: message body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_bbs_req_RemoveRecipients'
      parameters:
        - name: message-id
          in: path
          description: message-id
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  /api/bbs/message:
    post:
      tags:
        - BBs
      summary: Create message
      deprecated: true
      description: |
        Create message

        **Auth:** Requires first-party service token with `send_message` permission
      security:
        - bearerAuth: []
      requestBody:
        description: message body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_client_req_messageV2'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  '/api/bbs/{id}':
    delete:
      tags:
        - BBs
      summary: Removes a message
      deprecated: true
      description: |
        Removes а message

        **Auth:** Requires first-party service token with `cancel_message` permission
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  /api/bbs/mail:
    post:
      tags:
        - BBs
      summary: Send email
      description: |
        Sends an email

        **Auth:** Requires first-party service token with `send_mail` permission
      security:
        - bearerAuth: []
      requestBody:
        description: sending mail
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_client_req_mail'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    AppPlatform:
      required:
        - name
      properties:
        name:
          type: string
    AppVersion:
      required:
        - name
      properties:
        name:
          type: string
    Config:
      type: object
      properties:
        CoreAuthPrivateKey:
          type: string
        CoreBBHost:
          type: string
        NotificationsServiceURL:
          type: string
        InternalAPIKey:
          type: string
    CoreToken:
      type: object
      properties:
        uid:
          type: string
        app_id:
          type: string
        org_id:
          type: string
        sub:
          type: string
        name:
          type: string
        scope:
          type: string
        permissions:
          type: string
        anonymous:
          type: boolean
    CoreAccountRef:
      type: object
      properties:
        user_id:
          type: string
        name:
          type: string
    FirebaseToken:
      type: object
      properties:
        token:
          type: string
        app_platform:
          type: string
        app_version:
          type: string
        date_created:
          type: string
        date_updated:
          type: string
    Message:
      type: object
      properties:
        org_id:
          type: string
        app_id:
          type: string
        _id:
          type: string
        date_created:
          type: string
        date_updated:
          type: string
        priority:
          type: string
        recipients:
          type: array
          $ref: '#/components/schemas/Recipient'
        recipients_criteria_list:
          type: array
          $ref: '#/components/schemas/RecipientCriteria'
        recipient_account_criteria:
          type: object
        topic:
          type: string
        subject:
          type: string
        sender:
          $ref: '#/components/schemas/Sender'
        body:
          type: string
        data:
          type: array
          items:
            type: string
    MessageRecipient:
      type: object
      properties:
        id:
          type: string
        org_id:
          type: string
        app_id:
          type: string
        user_id:
          type: string
        message_id:
          type: string
        mute:
          type: boolean
        read:
          type: boolean
    Recipient:
      type: object
      properties:
        user_id:
          type: string
        name:
          type: string
        notification_disabled:
          type: boolean
        mute:
          type: boolean
        read:
          type: boolean
    RecipientCriteria:
      type: object
      properties:
        app_version:
          type: string
        app_platform:
          type: string
    Sender:
      type: object
      properties:
        type:
          type: string
        user:
          $ref: '#/components/schemas/CoreAccountRef'
    TokenInfo:
      type: object
      properties:
        previous_token:
          type: string
        token:
          type: string
        app_version:
          type: string
        app_platform:
          type: string
    Topic:
      type: object
      properties:
        name:
          type: string
        app_id:
          type: string
        org_id:
          type: string
        description:
          type: string
        date_created:
          type: string
        date_updated:
          type: string
    User:
      type: object
      properties:
        _id:
          type: string
        notifications_disabled:
          type: string
        firebase_tokens:
          type: array
          $ref: '#/components/schemas/FirebaseToken'
        user_id:
          type: string
        topics:
          type: array
        date_created:
          type: string
        date_updated:
          type: string
    _shared_req_CreateMessages:
      type: array
      items:
        $ref: '#/components/schemas/_shared_req_CreateMessage'
    _shared_req_CreateMessage:
      required:
        - org_id
        - app_id
        - priority
        - subject
        - body
        - data
        - recipients
        - recipients_criteria_list
        - recipient_account_criteria
      type: object
      properties:
        id:
          type: string
          description: optional
        org_id:
          type: string
        app_id:
          type: string
        time:
          type: integer
          format: int64
        priority:
          type: integer
        topic:
          type: string
        subject:
          type: string
        body:
          type: string
        data:
          type: object
        recipients:
          type: array
          items:
            $ref: '#/components/schemas/_shared_req_CreateMessage_InputMessageRecipient'
        recipients_criteria_list:
          type: array
          items:
            $ref: '#/components/schemas/_shared_req_CreateMessage_InputRecipientCriteria'
        recipient_account_criteria:
          type: object
    _shared_req_CreateMessage_InputMessageRecipient:
      required:
        - user_id
        - mute
      type: object
      properties:
        user_id:
          type: string
        mute:
          type: boolean
    _shared_req_CreateMessage_InputRecipientCriteria:
      type: object
      properties:
        app_version:
          type: string
        app_platform:
          type: string
    _client_req_mail:
      type: object
      properties:
        to_mail:
          type: string
        subject:
          type: string
        body:
          type: string
    _client_req_message:
      required:
        - _ids
      type: object
      properties:
        _ids:
          type: array
          items:
            type: string
    _client_req_messageV2:
      type: object
      properties:
        async:
          type: boolean
        message:
          $ref: '#/components/schemas/_shared_req_CreateMessage'
    _client_req_token:
      required:
        - token
      type: object
      properties:
        token:
          type: string
        previous_token:
          type: string
        app_version:
          type: string
        app_platform:
          type: string
    _client_req_user:
      required:
        - notifications_disabled
      type: object
      properties:
        notifications_disabled:
          type: boolean
    _admin_res_GetMessagesStatsItem:
      required:
        - date_created
        - sent_by
        - message
        - recipients_count
        - read_count
      type: object
      properties:
        date_created:
          type: string
        time:
          type: string
        sent_by:
          $ref: '#/components/schemas/_admin_res_GetMessagesStatsSentByItem'
        message:
          type: string
        recipients_count:
          type: number
        read_count:
          type: number
    _admin_res_GetMessagesStatsSentByItem:
      required:
        - account_id
      type: object
      properties:
        account_id:
          type: string
        name:
          type: string
    _bbs_req_AddRecipients:
      type: array
      items:
        required:
          - user_id
          - mute
        type: object
        properties:
          user_id:
            type: string
          mute:
            type: boolean
    _bbs_req_RemoveRecipients:
      required:
        - users_ids
      type: object
      properties:
        users_ids:
          type: array
          items:
            type: string
